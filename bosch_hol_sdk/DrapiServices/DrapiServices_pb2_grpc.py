# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import DrapiServices_pb2 as DrapiServices__pb2


class DrapiServicesStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ResetSystem = channel.unary_unary(
                '/dspace.dsc.datareplay.DrapiServices/ResetSystem',
                request_serializer=DrapiServices__pb2.SystemResetConfiguration.SerializeToString,
                response_deserializer=DrapiServices__pb2.Response.FromString,
                )
        self.GetDeviceStatus = channel.unary_unary(
                '/dspace.dsc.datareplay.DrapiServices/GetDeviceStatus',
                request_serializer=DrapiServices__pb2.DeviceStatusConfiguration.SerializeToString,
                response_deserializer=DrapiServices__pb2.DeviceStatus.FromString,
                )
        self.GetVersions = channel.unary_unary(
                '/dspace.dsc.datareplay.DrapiServices/GetVersions',
                request_serializer=DrapiServices__pb2.VersionConfiguration.SerializeToString,
                response_deserializer=DrapiServices__pb2.VersionInformation.FromString,
                )


class DrapiServicesServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ResetSystem(self, request, context):
        """Reset a data-replay device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceStatus(self, request, context):
        """Get the status information of a data-replay device.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersions(self, request, context):
        """Get the versions of the different components.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DrapiServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ResetSystem': grpc.unary_unary_rpc_method_handler(
                    servicer.ResetSystem,
                    request_deserializer=DrapiServices__pb2.SystemResetConfiguration.FromString,
                    response_serializer=DrapiServices__pb2.Response.SerializeToString,
            ),
            'GetDeviceStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceStatus,
                    request_deserializer=DrapiServices__pb2.DeviceStatusConfiguration.FromString,
                    response_serializer=DrapiServices__pb2.DeviceStatus.SerializeToString,
            ),
            'GetVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersions,
                    request_deserializer=DrapiServices__pb2.VersionConfiguration.FromString,
                    response_serializer=DrapiServices__pb2.VersionInformation.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dspace.dsc.datareplay.DrapiServices', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DrapiServices(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ResetSystem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dspace.dsc.datareplay.DrapiServices/ResetSystem',
            DrapiServices__pb2.SystemResetConfiguration.SerializeToString,
            DrapiServices__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dspace.dsc.datareplay.DrapiServices/GetDeviceStatus',
            DrapiServices__pb2.DeviceStatusConfiguration.SerializeToString,
            DrapiServices__pb2.DeviceStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dspace.dsc.datareplay.DrapiServices/GetVersions',
            DrapiServices__pb2.VersionConfiguration.SerializeToString,
            DrapiServices__pb2.VersionInformation.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
